#This is a basic workflow to help you get started with Actions

name: CI-CD-monolith

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: 
      - 'main' 
  push:
    paths:
      - './monolith/**/*'
  
defaults:
  run:
    working-directory: ./monolith

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./monolith/.pipeline
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Build
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_URL }}
          npm ci
          DEBUG=* npm run build -- --pr=${{ github.event.pull_request.number }} --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}} 
        env:
          CI: "true"

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: [build]
    defaults:
      run:
        working-directory: ./monolith/.pipeline
    steps:

      # Build the image using the specified build config
      # Get its build ID
      # Get the commit ID of that build
      # Get the SHA256 signature of the image
      # Tag the image with the commit ID and "dev"
      # ------------------------------------------------
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - uses: mshick/add-pr-comment@v1
        with:
          node-version: "12"
          message: |
            ** DEV URL : https://demo-monolith-dev-${{ github.event.pull_request.number }}.e34374-dev.apps.klab.devops.gov.bc.ca/api **
          repo-token: ${{ secrets.PR_TOKEN }}

      - name: Deploy the image
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_URL }}
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=dev --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}

  deploy-to-test:
    needs: [build,deploy-to-dev]
    environment:
      name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./monolith/.pipeline
    steps:

      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
          message: |
            ** TEST URL : https://demo-monolith-test-${{ github.event.pull_request.number }}.e34374-test.apps.klab.devops.gov.bc.ca/api **
          repo-token: ${{ secrets.PR_TOKEN }}

      - name: Deploy the image
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_URL }}
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=test --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}
  
  deploy-to-prod:
    needs: [build,deploy-to-dev, deploy-to-test]
    environment:
      name: Prod
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./monolith/.pipeline
    steps:

      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
          message: |
            ** PROD URL : https://demo-monolith.apps.klab.devops.gov.bc.ca/api **
            repo-token: ${{ secrets.PR_TOKEN }}

      - name: Deploy the image
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_URL}}
          npm ci
          DEBUG=* npm run deploy -- --pr=${{ github.event.pull_request.number }} --env=prod --git.branch.name=${{github.head_ref}} --git.ref=${{github.head_ref}}