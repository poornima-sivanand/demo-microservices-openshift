#This is a basic workflow to help you get started with Actions

name: CI-CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: 
      - 'main' 
  
defaults:
  run:
    working-directory: ./app

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - uses: actions/setup-node@master
  #       with:
  #         node-version: "12"
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Unit tests w/ coverage
  #       run: npm run test -- --coverage --passWithNoTests
  #     - name: LINTing
  #       run: npm run lint -- --quiet -f codeframe
  #     - name: Prettier
  #       run: npm run format -- --check
  #     # - name: Upload coverage report
  #     #   env:
  #     #     CC_TEST_REPORTER_ID: ${{ secrets.TestReporterID }}
  #     #     CI: "true"
  #     #   run: |
  #     #     curl -Ls https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  #     #     chmod +x ./cc-test-reporter
  #     #     ./cc-test-reporter format-coverage -t lcov -o codeclimate.json
  #     #     ./cc-test-reporter upload-coverage -i codeclimate.json
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app/.pipeline
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Build
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_URL }}
      # Import the Image 
          oc -n e34374-tools import-image ubi9/nodejs-16:1-36 --from=registry.access.redhat.com/ubi9/nodejs-16:1-36 --confirm
      # Build the Monolith App Image
          oc -n e34374-tools process -f monolith/openshift/build.yaml | oc -n e34374-tools apply -f - --wait
        env:
          CI: "true"

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: [build]
    defaults:
      run:
        working-directory: ./app/.pipeline
    steps:

      # Build the image using the specified build config
      # Get its build ID
      # Get the commit ID of that build
      # Get the SHA256 signature of the image
      # Tag the image with the commit ID and "dev"
      # ------------------------------------------------
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Deploy the image
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_URL }}
        # Tag the Image in the Dev Namespace
          oc tag e34374-tools/demo-monolith:1.0 e34374-dev/demo-monolith:1.0
        # Deploy the Image in the Dev Namespace
          oc -n e34374-dev process -f monolith/openshift/deploy.yaml| oc -n e34374-dev apply -f -

  deploy-to-test:
    needs: [build,deploy-to-dev]
    environment:
      name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app/.pipeline
    steps:

      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Deploy the image
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_URL }}
        # Tag the Image in the Dev Namespace
          oc tag e34374-tools/demo-monolith:1.0 e34374-test/demo-monolith:1.0
        # Deploy the Image in the Dev Namespace
          oc -n e34374-test process -f monolith/openshift/deploy.yaml| oc -n e34374-test apply -f -
  
  deploy-to-prod:
    needs: [build,deploy-to-dev, deploy-to-test]
    environment:
      name: Prod
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app/.pipeline
    steps:

      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - name: Deploy the image
        run: |
          oc version
          oc login --token=${{ secrets.OPENSHIFT_TOKEN}} --server=${{ secrets.OPENSHIFT_URL}}
        # Tag the Image in the Dev Namespace
          oc tag e34374-tools/demo-monolith:1.0 e34374-prod/demo-monolith:1.0
        # Deploy the Image in the Dev Namespace
          oc -n e34374-prod process -f monolith/openshift/deploy.yaml| oc -n e34374-prod apply -f -
